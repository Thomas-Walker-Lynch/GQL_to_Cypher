
Naming Conventions for Directories

  Our shop has a convention of naming directories after the role of the person,
  the name of the program, or generally, the agent, that is going to use
  the files in the directory.  In short, "directories are named after the agent the
  files are for."

  This convention makes it easier for people to make sense of directory names. It
  is also natural for people to think in terms of the actors doing things. Indeed
  our ancestors saw the hand of a person, spirit, or God behind everything.

Top Level Directory

  Sometimes this naming convention is not practical.  The top level of a github
  project must be named after the project. Though note here to the human
  tendency to see actors. Look at all the mythical animals on the covers of the
  O'Reilley manuals.

  The top level directory of our git project is reserved for project manager to
  use. It will have files such as `.git`, and various scripts for maintaining
  the project. The project manager will install the tools used in a directory
  called 'toolsmiths.  There is a sub directory for the developers, called
  'developers'.

  The top level directory is located at `$REPO_HOME`

Developers

  The developer’s directory is located at `$REPO_HOME/developers`, and is
  known in the environment as `$DEVELOPERS_HOME`. 

  This directory contains the developers' workspace.  Developers are free to
  organize it in any manner they see fit, though they should continue to follow the
  convention of naming directories after the agents that operate on the contained files.

  As examples,

  - Files for the **C compiler** are placed in the `cc` directory, since they
    are "for" the C compiler.

  - Files for the **Java compiler** (javac) are stored in the `javac` directory.

  - Similar naming conventions are followed for other tools. For instance, if
    the project involves files for another tool or compiler, the directory is
    named after that tool.

Executor

  Sometimes multiple actors operate on the files in a directory. In which case
  we give the directory a more general name that describes the actors.

  So if we had a directory that held a mix of files for various compilers we might
  name the directory 'compiler_input' or even 'compiler'.

  One common generalization is 'executor'. An executor is any program that runs
  another program; examples include shells that interpret shell scripts;
  various language interpreter; and most famously the machine loader, which will
  load an instruction sequence into memory and point the program counter at it.

Readers

  This refers to humans or AIs. It is short for 'Dear Readers,".  These
  files are for those rare individuals who read documents.

Files for mythological beings

  I've had a bit of fun and introduced a couple of these. We wouldn't want too
  many.

  tanuki, たぬき

  Both a mythical beast, and a real animal. A kind of raccoon, which like all
  raccoons, will steal things, especially food. Files left within reach of a
  tanuki, are likely to disappear without notice. Typically these are things
  such as intermediate files during a build.

  Somnus

  As a developer I often have files that I set aside just in case I want to look
  at them again. Sometimes I plan to bring them back later. Unlike tanuki files,
  they are not deleted by any clean script or any program that is using them as
  intermediate files. However, they do not appear it the repo. Somnus is the
  Roman god of sleep.
