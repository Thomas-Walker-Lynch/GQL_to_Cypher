#================================================================================
# Make targets
#

all: setup $(PROGRAM_FPL)

grammar: setup $(ANTLR_OUT_FPL)

SyntaxTree_Test: $(ANTLR_OUT_GQL_Test_FPL)
	make $(PROGRAM_SyntaxTree_Test)

SyntaxTree_20240412: $(ANTLR_OUT_GQL_20240412_FPL)
	make $(PROGRAM_SyntaxTree_20240412)

PrintRuleNameList: $(PROGRAM_PrintRuleNameList)

# Specific grammar targets. Run them like this:
# > make <grammar_name>
# e.g. > make GQL_test
$(foreach grammar,$(ANTLR_GRAMMAR_LIST),$(eval $(grammar): $(value ANTLR_OUT_$(grammar)_FPL)))

# Compile all the .java files.
java: setup $(JAVA_COMP_OUT_FPL)

.PHONY: version
version:
	$(info ANTLR_JAR is '$(notdir $(ANTLR_JAR))')
	@ $(JAVA_COMP) --version
	@ $(JAVA_ARCHIVE) --version
	@ make -v | head -n 1
	@ echo "makefile 0.2"

.PHONY: setup
setup:
	# ANTLR automatically creates $(ANTLR_OUT_DIR)
	mkdir -p $(ANTLR_IN_DIR) $(JAVA_COMP_IN_PRIMARY_DIR) $(JVM_IN_DIR)
	mkdir -p executor test deprecated experiment documentation temporary 

.PHONY: clean\:%
clean\:%:
	clean $(subst :, ,$*))

# Default clean target
.PHONY: clean
clean:
	clean

#useful for distinguishing initial make error messages and message generated by rules firing
nothing:
	@:

#================================================================================
# recipes

$(ANTLR_OUT_DIR)/%Lexer.java \
$(ANTLR_OUT_DIR)/%Parser.java \
$(ANTLR_OUT_DIR)/%BaseVisitor.java \
$(ANTLR_OUT_DIR)/%Visitor.java: $(ANTLR_IN_DIR)/%.g4
	@echo "making grammar from:" $<
	$(JAVA_INTERP) -jar $(ANTLR_JAR) -Dlanguage=Java -visitor -o $(ANTLR_OUT_DIR_PARENT) $<

$(JAVA_COMP_OUT_DIR)/%.jar: $(JAVA_COMP_IN_PRIMARY_DIR)/%.java
	@echo "Building $*..."
	$(JAVA_COMP) -d $(JAVA_COMP_OUT_DIR) -sourcepath $(JAVA_COMP_IN_DL) $<
	$(JAVA_ARCHIVE) cf $@ -C $(JVM_IN_DIR) $*.class
	@echo "Created $@"

.PRECIOUS: $(JAVA_COMP_OUT_DIR)/%.jar
executor/%: $(JAVA_COMP_OUT_DIR)/%.jar
	@echo "Creating script for $*..."
	@echo "#!/usr/bin/env bash" > executor/$*
	@echo "$(JAVA_INTERP) -cp $< $*" \$$\@ >> executor/$*
	chmod +x executor/$*
	@echo "Created script executor/$*"


